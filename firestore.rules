rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // match /{document=**} {
    //   allow read: if true;
    //   allow write: if request.auth != null;
    // }

    function isSigned () {
      return request.auth != null
    }

    function isOwnPost () {
      return resource.data.userRef == /databases/$(database)/documents/users/$(request.auth.uid)
    }

    function isOwnContent (id) {
      return get(/databases/$(database)/documents/posts/$(id)).data.userRef == /databases/$(database)/documents/users/$(request.auth.uid)
    }

    function isUpdateReadCount () {
      return request.resource.data.diff(resource.data).affectedKeys().hasOnly(['readCount'])
    }

    match /users/{id} {
      allow read: if true
      allow write: if isSigned()
    }
    match /posts/{id} {
      allow read: if true
      allow create: if isSigned()
      allow update: if isOwnPost() || isUpdateReadCount()
      allow delete: if isOwnPost()
      match /contents/{cid} {
        allow read: if true
        allow create: if isSigned()
        // allow update: if isSigned()
        allow delete: if isOwnContent(id)
      }
    }
  }
}